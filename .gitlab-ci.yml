stages:
  - build
  - test
  - deploy_prod

#variables:
#  TAG_IMAGE: "LATEST"

maven-build:
  stage: build
  image: maven:3-openjdk-18-slim
  script:
    - echo "Compiling the code..."
    - "mvn clean package"
    - echo "Compile complete."
  artifacts:
    paths:
      - impl/target/*.jar

docker-build:
  stage: test
  image: docker:24.0.5
  variables:
    TAG_IMAGE: "LATEST1"
  only:
#    - develop
#    - 24-add-image-tag
  before_script:
    - docker login --username ${DOCKER_LOGIN} --password ${DOCKER_PASS}
  script:
    - echo "Running image build"
    - echo "$CI_COMMIT_BRANCH"
    - echo "$CI_COMMIT_TAG"
    - echo "$CI_BUILD_TAG"
    - echo "$CI_COMMIT_TIMESTAMP"
    - echo $TAG_IMAGE
    - unset $TAG_IMAGE
    - echo $TAG_IMAGE="LATEST2"
    - echo $TAG_IMAGE
#    -  if [ "$CI_COMMIT_TAG" == null ]; then "$TAG_IMAGE"="LATEST2"; else "$TAG_IMAGE"="LATEST3"; fi
    - ssh if [ "$CI_COMMIT_TAG" != null ]; then $TAG_IMAGE = "$CI_COMMIT_TAG"; fi
    - echo $TAG_IMAGE
    - docker build . -t skillboxgroup40/cicdtest:$TAG_IMAGE
    - docker images
    - docker push skillboxgroup40/cicdtest:$TAG_IMAGE
    - echo "Image build"
  artifacts:
    paths:
      - impl/target/*.jar




#deploy-job:
#  stage: deploy_prod
#  only:
#    - develop
#  except:
#    - tags
#  before_script:
#    - which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )
#    - eval $(ssh-agent -s)
#    - echo "$SSH_PRIVATE_KEY" | ssh-add -
#    - mkdir -p ~/.ssh
#    - chmod 700 ~/.ssh
#    - ssh-keyscan $PROD_HOST >> ~/.ssh/known_hosts
#    - chmod 644 ~/.ssh/known_hosts
#  script:
#    - ssh $PROD_USER@$PROD_HOST "kubectl rollout restart -n $NAMESPACE deployment $DEPLOYMENT_NAME"
