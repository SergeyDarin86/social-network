stages:
  - build
  - test
  - deploy_prod


maven-build:
  stage: build
  image: maven:3-openjdk-18-slim
  script:
    - echo "Compiling the code..."
    - "mvn clean package"
    - echo "Compile complete."
  artifacts:
    paths:
      - impl/target/*.jar

docker-build:
  stage: test
  image: docker:24.0.5
  variables:
    TAG_IMAGE: "LATEST"
  rules:
#    - if: $CI_COMMIT_BRANCH == "develop"
#    - if: ($CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_TAG != "")
#    - if: $CI_COMMIT_BRANCH == "develop"
    - if: $CI_COMMIT_TAG
#  only:
#    variables:
#      - ($CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_TAG != "")
  before_script:
    - docker login --username ${DOCKER_LOGIN} --password ${DOCKER_PASS}
  script:
    - echo "Running image build"
    - if [ $CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_TAG != "" ]; then echo "is BUILD"; else echo "is NOT BUILD"; fi
    - echo "$CI_COMMIT_BRANCH"
    - if [ $CI_COMMIT_BRANCH == "develop" ]; then echo "it is DEVELOP"; else echo "it is NOT DEVELOP"; fi
    - echo "$CI_COMMIT_TAG"
    - echo "$CI_BUILD_TAG"
    - echo "$CI_COMMIT_TIMESTAMP"
    - echo $TAG_IMAGE
    - if [ $CI_COMMIT_TAG != "" ]; then TAG_IMAGE=$CI_COMMIT_TAG; fi
    - echo $TAG_IMAGE
    - docker build . -t skillboxgroup40/cicdtest:$TAG_IMAGE
    - docker images
    - docker push skillboxgroup40/cicdtest:$TAG_IMAGE
    - echo "Image build"
  artifacts:
    paths:
      - impl/target/*.jar




#deploy-job:
#  stage: deploy_prod
#  only:
#    - develop
#  except:
#    - tags
#  before_script:
#    - which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )
#    - eval $(ssh-agent -s)
#    - echo "$SSH_PRIVATE_KEY" | ssh-add -
#    - mkdir -p ~/.ssh
#    - chmod 700 ~/.ssh
#    - ssh-keyscan $PROD_HOST >> ~/.ssh/known_hosts
#    - chmod 644 ~/.ssh/known_hosts
#  script:
#    - ssh $PROD_USER@$PROD_HOST "kubectl rollout restart -n $NAMESPACE deployment $DEPLOYMENT_NAME"
